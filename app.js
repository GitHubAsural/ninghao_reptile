// Generated by CoffeeScript 1.8.0
(function() {
  var async, cheerio, downVideo, fs, getInfo, reqOp, request, task;

  request = require("request");

  async = require("async");

  fs = require("fs");

  cheerio = require("cheerio");

  reqOp = function(url) {
    var options;
    options = {
      url: url,
      headers: {
        'User-Agent': 'request',
        'Cookie': ''
      }
    };
    return options;
  };

  async.auto({
    getPage: function(cb) {
      var op, url;
      console.log("获取课程页面信息 start");
      url = "http://ninghao.net/course/1882";
      op = reqOp(url);
      return request.get(op, function(err, res, body) {
        if (err) {
          return cb("get page error: " + err);
        }
        console.log("获取课程页面信息 end");
        return cb(null, body);
      });
    },
    analysisBody: [
      "getPage", function(cb, result) {
        var $, body, href, link, linkLen;
        console.log("解析组装课程链接  start");
        body = result.getPage;
        $ = cheerio.load(body);
        link = $("tr > td a");
        linkLen = link.length;
        console.log("find link number " + linkLen);
        if (!linkLen) {
          return cb("analysisBody no find link");
        }
        href = [];
        link.each(function(idx, element) {
          return href.push($(element).attr("href"));
        });
        if (!href.length) {
          cb("err analysisBody not find link");
        }
        console.log("find link => " + href);
        console.log("解析组装课程链接 end");
        return cb(null, href);
      }
    ],
    doTask: [
      "analysisBody", function(cb, result) {
        var hrefArr;
        console.log("执行下载总任务 start");
        hrefArr = result.analysisBody;
        return task(cb, hrefArr);
      }
    ]
  }, function(err, result) {
    console.log("iiii..............");
    if (err) {
      return console.log(err);
    }
    return console.log("do all task");
  });

  task = function(cb, result) {
    var hrefArr;
    hrefArr = result;
    return async.eachSeries(hrefArr, function(item, callback) {
      var op, url;
      url = "http://ninghao.net" + item;
      op = reqOp(url);
      return async.auto({
        getDownInfo: function(childCB) {
          return getInfo(childCB, op);
        },
        downTask: [
          "getDownInfo", function(chiidCb, result) {
            var dInfo;
            dInfo = result.getDownInfo;
            return downVideo(chiidCb, dInfo);
          }
        ]
      }, function(errAuto, autoRes) {
        if (errAuto) {
          console.log(errAuto);
        }
        return callback();
      });
    }, function(eachErr, eachRes) {
      if (eachErr) {
        console.log(eachErr);
      }
      return cb();
    });
  };

  getInfo = function(cb, option) {
    var op;
    console.log("获取下载信息 start");
    op = option;
    return request.get(op, function(err, res, body) {
      var $, findElent, info;
      if (err) {
        return cb("" + op.url + "  get info error:" + err);
      }
      $ = cheerio.load(body);
      info = {};
      findElent = $("#sidebar section div.box");
      info.url = findElent.eq(0).find("a").attr("href");
      info.name = findElent.eq(1).find("strong").find("a").text();
      if (!info.url && !info.name) {
        return cb("" + op.url + " get info not find info");
      }
      console.log("获取下载信息 end");
      return cb(null, info);
    });
  };

  downVideo = function(cb, result) {
    var dowInfo, op, write;
    console.log("开始下载视频");
    dowInfo = result;
    op = reqOp(dowInfo.url);
    write = fs.createWriteStream(dowInfo.name + ".mp4");
    return request.get(op).on("response", function(res) {
      console.log(".................................");
      console.log("" + dowInfo.name + "  " + dowInfo.url);
      console.log(res.statusCode);
      console.log(res.headers['content-type']);
      if (res.statusCode === 200) {
        cb();
      }
      return console.log("................................");
    }).on("error", function(err) {
      "console.log " + dowInfo.name + "  " + downInfo.url + " down error: " + err;
      return cb();
    }).pipe(write);
  };

}).call(this);

//# sourceMappingURL=app.js.map
